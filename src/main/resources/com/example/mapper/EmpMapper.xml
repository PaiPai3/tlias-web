<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.example.mapper.EmpMapper">

<!--    更新员工信息-->
    <update id="updateById">
        update emp
        set username    = #{username},
            password    = #{password},
            name        = #{name},
            gender      = #{gender},
            phone       = #{phone},
            job         = #{job},
            salary      = #{salary},
            image       = #{image},
            entry_date  = #{entryDate},
            dept_id     = #{deptId},
            update_time = #{updateTime}
        where id = #{id}
    </update>

    <!--    按ID删除-->
    <delete id="deleteByIds">
        delete from emp where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <!--    条件查询所有员工信息-->
    <select id="list" resultType="com.example.pojo.Emp">
        select emp.*, dept.name deptName
        from emp, dept
        <where>#动态sql
            emp.dept_id = dept.id
            <if test="name != null and name != ''">
                and emp.name like concat('%', #{name}, '%')
            </if>
            <if test="gender != null">
                and emp.gender = #{gender}
            </if>
            <if test="begin != null and end != null">
                and emp.entry_date between #{begin} and #{end}
            </if>
        </where>
        order by emp.update_time desc
    </select>


    <!--    定义手动映射类型-->
    <resultMap id="empResultMap" type="com.example.pojo.Emp">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="phone" property="phone"/>
        <result column="job" property="job"/>
        <result column="salary" property="salary"/>
        <result column="image" property="image"/>
        <result column="entry_date" property="entryDate"/>
        <result column="dept_id" property="deptId"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_time" property="createTime"/>

        <collection property="exprList" ofType="com.example.pojo.EmpExpr">
            <id column="ee_id" property="id"/>
            <result column="ee_empid" property="empId"/>
            <result column="ee_begin" property="begin"/>
            <result column="ee_end" property="end"/>
            <result column="ee_company" property="company"/>
            <result column="ee_job" property="job"/>
        </collection>
    </resultMap>

    <!--    按ID查询员工个人信息-->
    <!--    返回对象属性包含一个集合，mybatis无法完成自动封装，因此需要手动定义resultMap手动封装-->
    <select id="getById" resultMap="empResultMap">
        select emp.*,
               ee.id      ee_id,
               ee.emp_id  ee_empid,
               ee.begin   ee_begin,
               ee.end     ee_end,
               ee.company ee_company,
               ee.job     ee_job
        from emp,
             emp_expr ee
        where emp.id = ee.emp_id
          and emp.id = #{id}
    </select>

    <!--    查询所有员工的职位分布-->
    <select id="countEmpJobData" resultType="java.util.Map">
        select (case
                    when job = 1 then '班主任'
                    when job = 2 then '讲师'
                    when job = 3 then '学工主管'
                    when job = 4 then '教研主管'
                    when job = 5 then '咨询师'
                    else '未知' end) pos,
               count(*)              num
        from emp
        group by job
        order by num;
    </select>

    <!--    查询所有员工的性别分布-->
    <select id="countEmpGenderData" resultType="java.util.Map">
        select if(gender = 1, '男', '女') gender,
               count(*)                   num
        from emp
        group by gender
    </select>

</mapper>